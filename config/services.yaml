---
parameters:
    env(APP_NAMESPACE): "roadiz"
    env(APP_VERSION): "0.1.0"
    env(APP_USE_ACCEPT_LANGUAGE_HEADER): 'false'
    env(APP_UNSPLASH_CLIENT_ID): ~
    env(APP_HEALTH_CHECK_TOKEN): ~
    env(OPEN_ID_CLIENT_ID): ~
    env(OPEN_ID_CLIENT_SECRET): ~
    env(OPEN_ID_HOSTED_DOMAIN): ~
    env(OPEN_ID_DISCOVERY_URL): ~
    env(SOLR_CORE_NAME): "roadiz"
    env(SOLR_PORT): "8983"

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $cmsVersion: '2.0.0'
            $appVersion: '%roadiz_core.app_version%'
            $cmsVersionPrefix: 'alpha'
            $staticDomain: '%roadiz_core.static_domain_name%'
            $inheritanceType: '%roadiz_core.inheritance_type%'
            $maxPixelSize: '%rz_intervention_request.max_pixel_size%'
            $imageDriver: '%rz_intervention_request.driver%'
            $appNamespace: '%roadiz_core.app_namespace%'
            $exportDir: '%kernel.project_dir%/var/export'
            $privateKeyName: '%roadiz_core.private_key_name%'
            $generatedEntitiesDir: '%roadiz_core.generated_entities_dir%'
            $debug: '%kernel.debug%'
            $defaultControllerClass: '%roadiz_core.default_node_source_controller%'
            $webhookMessageTypes: '%roadiz_core.webhook.message_types%'
            $useAcceptLanguageHeader: '%roadiz_core.use_accept_language_header%'
            $healthCheckToken: '%roadiz_core.health_check_token%'

    RZ\Roadiz\CoreBundle\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Traits/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Event/'

    RZ\Roadiz\CoreBundle\EntityHandler\:
        resource: '../src/EntityHandler/'
        # Recreate handlers for each usage
        shared: false
        public: true

    RZ\Roadiz\CoreBundle\Api\Filter\:
        resource: '../src/Api/Filter/'
        autowire: true
        tags: [ { name: 'api_platform.filter' } ]

    RZ\Roadiz\CoreBundle\Bag\:
        resource: '../src/Bag/'
        autowire: true
        public: true

    RZ\Roadiz\CoreBundle\Serializer\Normalizer\RealmSerializationGroupNormalizer:
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    RZ\Roadiz\CoreBundle\Serializer\Normalizer\NodesSourcesPathNormalizer:
        # By default, .inner is passed as argument
        decorates: 'api_platform.jsonld.normalizer.item'
    # Need a different name to avoid duplicate YAML key
    roadiz_core.serializer.normalizer.nodes_sources_path.json:
        class: 'RZ\Roadiz\CoreBundle\Serializer\Normalizer\NodesSourcesPathNormalizer'
        decorates: 'api_platform.serializer.normalizer.item'

    Limenius\Liform\LiformInterface:
        alias: liform

    roadiz_core.liform.datetime_type.transformer:
        class: Limenius\Liform\Transformer\StringTransformer
        parent: Limenius\Liform\Transformer\AbstractTransformer
        tags:
            - { name: liform.transformer, form_type: datetime, widget: datetime }

    roadiz_core.liform.date_type.transformer:
        class: Limenius\Liform\Transformer\StringTransformer
        parent: Limenius\Liform\Transformer\AbstractTransformer
        tags:
            - { name: liform.transformer, form_type: date, widget: date }

    roadiz_core.liform.file_type.transformer:
        class: Limenius\Liform\Transformer\StringTransformer
        parent: Limenius\Liform\Transformer\AbstractTransformer
        tags:
            - { name: liform.transformer, form_type: file, widget: file }

    RZ\Roadiz\CoreBundle\Serializer\Normalizer\TranslationAwareNormalizer:
        tags:
            - { name: 'serializer.normalizer', priority: 64 }

    RZ\Roadiz\CoreBundle\Serializer\TranslationAwareContextBuilder:
        decorates: 'api_platform.serializer.context_builder'
        arguments: [ '@RZ\Roadiz\CoreBundle\Serializer\TranslationAwareContextBuilder.inner' ]
        autowire: true
        autoconfigure: false

    RZ\Roadiz\Document\EventSubscriber\:
        resource: '%kernel.project_dir%/vendor/roadiz/documents/src/Roadiz/Document/EventSubscriber/'
        autowire: true
        autoconfigure: true

    RZ\Roadiz\CoreBundle\SearchEngine\Indexer\:
        resource: '../src/SearchEngine/Indexer/'
        # Recreate handlers for each usage
        shared: false
        public: true

    RZ\Roadiz\CoreBundle\Mailer\EmailManager:
        # Recreate manager for each usage
        shared: false

    RZ\Roadiz\CoreBundle\Doctrine\EventSubscriber\:
        resource: '../src/Doctrine/EventSubscriber'
        tags:
            - { name: monolog.logger, channel: doctrine }
            - { name: doctrine.event_subscriber }

    RZ\Roadiz\Core\Events\DocumentLifeCycleSubscriber:
        tags:
            - { name: monolog.logger, channel: doctrine }
            - { name: doctrine.event_subscriber }

    RZ\Roadiz\Core\Events\LeafEntityLifeCycleSubscriber:
        tags:
            - { name: monolog.logger, channel: doctrine }
            - { name: doctrine.event_subscriber }

    RZ\Roadiz\CoreBundle\Doctrine\SchemaUpdater:
        tags:
            - { name: monolog.logger, channel: doctrine }

    RZ\Roadiz\CoreBundle\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    RZ\Roadiz\CoreBundle\Api\Controller\:
        resource: '../src/Api/Controller'
        tags: ['controller.service_arguments']

    RZ\Roadiz\CoreBundle\Security\Authorization\Voter\:
        resource: '../src/Security/Authorization/Voter'
        tags: [ 'security.voter' ]

    RZ\Roadiz\CoreBundle\Preview\PreviewResolverInterface:
        alias: RZ\Roadiz\CoreBundle\Preview\RequestPreviewRevolver

    RZ\Roadiz\CoreBundle\Preview\RequestPreviewRevolver:
        arguments:
            - '@Symfony\Component\HttpFoundation\RequestStack'
            - 'ROLE_BACKEND_USER'

    RZ\Roadiz\Utils\Asset\Packages: ~
    RZ\Roadiz\Utils\Document\DownscaleImageManager: ~

    RZ\Roadiz\CoreBundle\SearchEngine\ClientRegistry:
        arguments: ['@service_container']

    RZ\Roadiz\CoreBundle\SearchEngine\Indexer\IndexerFactory:
        arguments: ['@service_container']

    RZ\Roadiz\CoreBundle\EntityHandler\HandlerFactory:
        arguments: ['@service_container']

    RZ\Roadiz\Core\Handlers\HandlerFactoryInterface:
        alias: RZ\Roadiz\CoreBundle\EntityHandler\HandlerFactory

    RZ\Roadiz\Contracts\NodeType\NodeTypeResolverInterface:
        alias: RZ\Roadiz\CoreBundle\Bag\NodeTypes
        public: true

    RZ\Roadiz\EntityGenerator\EntityGeneratorFactory:
        arguments:
            - '@RZ\Roadiz\CoreBundle\Bag\NodeTypes'
            - '%roadiz_core.entity_generator_factory.options%'

    Gedmo\Loggable\LoggableListener:
        alias: RZ\Roadiz\CoreBundle\Doctrine\Loggable\UserLoggableListener

    RZ\Roadiz\CoreBundle\Doctrine\Loggable\UserLoggableListener:
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ "@annotation_reader" ] ]

    Symfony\Component\Asset\VersionStrategy\VersionStrategyInterface:
        alias: 'assets.empty_version_strategy'

    Doctrine\Persistence\ObjectManager:
        alias: 'doctrine.orm.default_entity_manager'

    RZ\Roadiz\Core\Models\FileAwareInterface:
        alias: RZ\Roadiz\CoreBundle\Filesystem\RoadizFileDirectories
        public: true

    RZ\Roadiz\CoreBundle\Filesystem\RoadizFileDirectories:
        arguments: ['%kernel.project_dir%']
        public: true

    RZ\Roadiz\Random\PasswordGenerator: ~

    RZ\Crypto\KeyChain\KeyChainInterface:
        alias: RZ\Crypto\KeyChain\AsymmetricFilesystemKeyChain

    RZ\Crypto\KeyChain\AsymmetricFilesystemKeyChain:
        arguments: ['%kernel.project_dir%/var/secret', true]

    JMS\Serializer\Construction\ObjectConstructorInterface:
        alias: RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\ObjectConstructor

    RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\ChainDoctrineObjectConstructor:
        decorates: jms_serializer.doctrine_object_constructor
        arguments:
            - '@doctrine.orm.default_entity_manager'
            - '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\ObjectConstructor'
            - [
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\TranslationObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\TagObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\NodeObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\NodeTypeObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\NodeTypeFieldObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\RoleObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\GroupObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\SettingObjectConstructor',
                    '@RZ\Roadiz\CoreBundle\Serializer\ObjectConstructor\SettingGroupObjectConstructor'
            ]

    Solarium\Core\Client\Client:
        factory: ['RZ\Roadiz\CoreBundle\SearchEngine\ClientRegistry', 'getClient']

    # Provides LoginAttemptManager aware authentication
    RZ\Roadiz\CoreBundle\Security\Authentication\JwtAuthenticationSuccessHandler:
        decorates: 'lexik_jwt_authentication.handler.authentication_success'

    RZ\Roadiz\CoreBundle\Security\Authorization\Chroot\NodeChrootResolver:
        alias: RZ\Roadiz\CoreBundle\Security\Authorization\Chroot\NodeChrootChainResolver

    RZ\Roadiz\CoreBundle\Security\Authorization\Chroot\NodeChrootChainResolver:
        arguments:
            - ['@RZ\Roadiz\CoreBundle\Security\Authorization\Chroot\RoadizUserNodeChrootResolver']

    RZ\Roadiz\CoreBundle\Cache\Clearer\AssetsFileClearer:
        arguments:
            - '%kernel.project_dir%/public/assets'

    RZ\Roadiz\CoreBundle\Importer\AttributeImporter:
        tags: ['roadiz_core.importer']
    RZ\Roadiz\CoreBundle\Importer\GroupsImporter:
        tags: ['roadiz_core.importer']
    RZ\Roadiz\CoreBundle\Importer\NodeTypesImporter:
        tags: ['roadiz_core.importer']
    RZ\Roadiz\CoreBundle\Importer\RolesImporter:
        tags: ['roadiz_core.importer']
    RZ\Roadiz\CoreBundle\Importer\SettingsImporter:
        tags: ['roadiz_core.importer']
    RZ\Roadiz\CoreBundle\Importer\TagsImporter:
        tags: ['roadiz_core.importer']

    #
    # Markdown
    #
    League\CommonMark\Extension\Autolink\AutolinkExtension:
        tags: ['roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\ExternalLink\ExternalLinkExtension:
        tags: ['roadiz_core.markdown.line_converter.extension', 'roadiz_core.markdown.text_converter.extension', 'roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\Footnote\FootnoteExtension:
        tags: ['roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\InlinesOnly\InlinesOnlyExtension:
        tags: ['roadiz_core.markdown.line_converter.extension']
    League\CommonMark\Extension\SmartPunct\SmartPunctExtension:
        tags: ['roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\Strikethrough\StrikethroughExtension:
        tags: ['roadiz_core.markdown.text_converter.extension', 'roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\TaskList\TaskListExtension:
        tags: ['roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\CommonMark\CommonMarkCoreExtension:
        tags: ['roadiz_core.markdown.text_converter.extension', 'roadiz_core.markdown.text_extra_converter.extension']
    League\CommonMark\Extension\Table\TableExtension:
        tags: ['roadiz_core.markdown.text_converter.extension', 'roadiz_core.markdown.text_extra_converter.extension']

    #
    # Media finders
    #
    RZ\Roadiz\CoreBundle\Document\MediaFinder\UnsplashPictureFinder:
        arguments:
            - '%roadiz_core.medias.unsplash_client_id%'
    RZ\Roadiz\Utils\MediaFinders\RandomImageFinder:
        alias: RZ\Roadiz\CoreBundle\Document\MediaFinder\UnsplashPictureFinder
    RZ\Roadiz\Document\Renderer\ImageRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\PictureRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\VideoRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\AudioRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\PdfRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\SvgRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\InlineSvgRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\EmbedRenderer:
        tags: [ { name: 'roadiz_core.document_renderer', priority: -128 } ]
    RZ\Roadiz\Document\Renderer\ThumbnailRenderer:
        tags: [ 'roadiz_core.document_renderer' ]
    RZ\Roadiz\Document\Renderer\RendererInterface:
        alias: RZ\Roadiz\Document\Renderer\ChainRenderer

    # Default AbstractDocumentFactory is the public one.
    RZ\Roadiz\Utils\Document\AbstractDocumentFactory:
        alias: RZ\Roadiz\CoreBundle\Document\DocumentFactory

    #
    # Routing
    #
    RZ\Roadiz\CoreBundle\Routing\RedirectionRouter:
        lazy: true
        tags: [ { name: 'router', priority: 100 } ]
    RZ\Roadiz\CoreBundle\Routing\NodeRouter:
        lazy: true
        tags: [ { name: 'router', priority: 0 } ]

    RZ\Roadiz\Utils\UrlGenerators\DocumentUrlGeneratorInterface:
        alias: RZ\Roadiz\CoreBundle\Routing\DocumentUrlGenerator

    RZ\Roadiz\CoreBundle\Routing\PathResolverInterface:
        class: RZ\Roadiz\CoreBundle\Routing\ChainResourcePathResolver

    RZ\Roadiz\CoreBundle\Routing\ChainResourcePathResolver:
        alias: RZ\Roadiz\CoreBundle\Routing\PathResolverInterface

    #
    # Add your own PathResolvers to serve resources
    #
    roadiz_core.path_resolvers.nodes_sources:
        class: RZ\Roadiz\CoreBundle\Routing\NodesSourcesPathResolver
        tags: [ { name: 'roadiz_core.path_resolver', priority: 0 }  ]
    roadiz_core.path_resolvers.redirections:
        class: RZ\Roadiz\CoreBundle\Routing\RedirectionPathResolver
        tags: [ { name: 'roadiz_core.path_resolver', priority: 10 }  ]
    #
    # Twig
    #
    roadiz_core.twig_loader:
        class: Twig\Loader\FilesystemLoader
        calls:
            - prependPath: ['%kernel.project_dir%/vendor/roadiz/documents/src/Roadiz/Resources/views']
        tags: ['twig.loader']
    #
    # Twig extensions
    #
    RZ\Roadiz\TwigExtension\DocumentExtension:
        tags: ['twig.extension']
    RZ\Roadiz\Markdown\Twig\MarkdownExtension:
        tags: ['twig.extension']
    RZ\Roadiz\CoreBundle\TwigExtension\BlockRenderExtension:
        arguments: [ '@fragment.handler' ]
    RZ\Roadiz\CoreBundle\TwigExtension\RoutingExtension:
        decorates: 'twig.extension.routing'
        autoconfigure: false
        arguments:
            - '@.inner'

    RZ\Roadiz\Document\DocumentFinderInterface:
        alias: RZ\Roadiz\CoreBundle\Document\DocumentFinder

    RZ\Roadiz\Utils\MediaFinders\EmbedFinderFactory:
        arguments:
            - '%roadiz_core.medias.supported_platforms%'

    RZ\Roadiz\Document\Renderer\ChainRenderer:
        arguments: [[]]
        lazy: true

    #
    # Open ID
    #
    RZ\Roadiz\OpenId\OAuth2LinkGenerator:
        arguments:
            - '@?RZ\Roadiz\OpenId\Discovery'
            - '@security.csrf.token_manager'
            - '%roadiz_core.open_id.hosted_domain%'
            - '%roadiz_core.open_id.oauth_client_id%'
            - '%roadiz_core.open_id.scopes%'

    RZ\Roadiz\OpenId\OpenIdJwtConfigurationFactory:
        arguments:
            - '@?RZ\Roadiz\OpenId\Discovery'
            - '%roadiz_core.open_id.hosted_domain%'
            - '%roadiz_core.open_id.oauth_client_id%'
            - '%roadiz_core.open_id.verify_user_info%'

    RZ\Roadiz\OpenId\Authentication\Provider\SettingsRoleStrategy:
        arguments: ['@RZ\Roadiz\CoreBundle\Bag\Settings']
        tags: ['roadiz_core.jwt_role_strategy']

    RZ\Roadiz\OpenId\Authentication\Provider\ChainJwtRoleStrategy: ~
    RZ\Roadiz\OpenId\Authentication\Provider\OpenIdAccountProvider: ~

    RZ\Roadiz\CoreBundle\Node\NodeNamePolicyFactory: ~
    RZ\Roadiz\CoreBundle\Node\NodeNamePolicyInterface:
        factory: ['@RZ\Roadiz\CoreBundle\Node\NodeNamePolicyFactory', 'create']

    #
    # Workflows
    #
    state_machine.node:
        public: true
        alias: RZ\Roadiz\CoreBundle\Workflow\NodeWorkflow

    RZ\TreeWalker\WalkerContextInterface:
        factory: [ '@RZ\Roadiz\CoreBundle\Api\TreeWalker\NodeSourceWalkerContextFactory', 'createWalkerContext' ]
